# -*- coding: utf-8 -*-
"""Python NumPy Project | Airport Cabs Data Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ta1VSooc40PPykQCHkRw27RyY2VeloXt

# **Python NumPy Project | Airport Cabs Data Analysis**
Follow you tube link---> https://www.youtube.com/watch?v=0xwFgi1rnlc&t=46s&ab_channel=KeshavSethi
"""

import numpy as np

taxi = np.genfromtxt('nyc_taxis.csv', delimiter=',' , skip_header=True)

"""# **Calculate the speed of taxi.**"""

speed = taxi[:,7]/(taxi[:,8]/3600)

"""# **Calculate mean speed.**"""

mean_speed = speed.mean()
print('The resultant speed is in miles per hour', mean_speed)

"""***Explanation :::***


The given Python code is performing a calculation to determine the speed of a taxi based on the values in a NumPy array.

Let's break down the code:

```python
speed = taxi[:,7]/(taxi[:,8]/3600)
```

- `taxi` is a NumPy array.
- `taxi[:,7]` selects the values from the 7th column of the `taxi` array. The `:` indicates that all rows are selected, while `7` specifies the column index.
- `taxi[:,8]` selects the values from the 8th column of the `taxi` array in a similar manner.
- `(taxi[:,8]/3600)` performs element-wise division of the values in the 8th column of `taxi` by 3600. This assumes that the values in the 8th column represent time in seconds, and this division is used to convert them into hours.
- `taxi[:,7]/(taxi[:,8]/3600)` calculates the element-wise division of the values from the 7th column by the converted values from the 8th column. This division results in the speed of the taxi, represented in units of whatever the 7th column values represent per hour.

The result of this calculation is assigned to the variable `speed`, which will hold an array or a vector containing the speeds corresponding to each row in the `taxi` array.

# **Calculate the number of rides in February month**
"""

rides_Feb = taxi[taxi[:,1]== 2,1]
print(rides_Feb.shape[0])

"""***Explanation:::***

The given Python code is selecting specific rows from a NumPy array based on a condition and then printing the number of rows that satisfy that condition.

Let's break down the code:

```python
rides_Feb = taxi[taxi[:,1] == 2, 1]
```

- `taxi` is a NumPy array.
- `taxi[:,1]` selects the values from the 2nd column (index 1) of the `taxi` array. The `:` indicates that all rows are selected, while `1` specifies the column index.
- `taxi[:,1] == 2` creates a boolean mask by comparing each value in the selected column to 2. It checks if the value is equal to 2 and returns a boolean array with `True` for the rows where the condition is satisfied and `False` for the rest.
- `taxi[taxi[:,1] == 2, 1]` selects the values from the 2nd column (index 1) of the `taxi` array, but only for the rows where the condition `taxi[:,1] == 2` is `True`. This selects the rides that occurred in February.
- The selected values are assigned to the variable `rides_Feb`.

```python
print(rides_Feb.shape[0])
```

- `rides_Feb.shape` returns the shape of the `rides_Feb` array, which is a tuple representing the number of rows and columns in the array.
- `rides_Feb.shape[0]` accesses the first element of the shape tuple, which represents the number of rows in the `rides_Feb` array.
- Finally, `print(rides_Feb.shape[0])` prints the number of rows, indicating the number of rides that occurred in February.

# **Calculate the number of rides where tips value is more than $50.**
"""

tip_values_greater_than_50 = taxi[taxi[:,12]>50,12]
print(tip_values_greater_than_50.shape[0])

"""# **Calculate the number of rides where the drop was JFK airport.**
Note that the JFK location code is 2.
"""

dropoff_JFK = taxi[taxi[:,6]== 2,6]
print(dropoff_JFK.shape[0])